#####################################################################################
# Copyright 2011 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# In accordance with the terms of section 7 (7. Additional Terms.) of
# the GNU Affero GPL v3, the copyright holders add the following
# Additional permissions:
# Notwithstanding to the terms of section 5 (5. Conveying Modified Source
# Versions) and 6 (6. Conveying Non-Source Forms.) of the GNU Affero GPL v3
# licence, when you create a Related Module, this Related Module is
# not considered as a part of the work and may be distributed under the
# license agreement of your choice.
# A "Related Module" means a set of sources files including their
# documentation that, without modification of the Source Code, enables
# supplementary functions or services in addition to those offered by
# the Software.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/agpl.html>.
#
#####################################################################################

##
# Default configuration file for the application. 
# You can define the location of the file by
# setting "rudder.configFile" JVM property,
# for example:
# java .... -Drudder.configFile=/opt/rudder/etc/rudder-web.conf
##


##
# Application information
##
#define that property if you are behind a proxy
#or anything that make the URL served by the
#servlet container be different than the public one
#note: if defined, must not end with /
#let blank to use default value
base.url=

##
#  LDAP properties
##

#  LDAP directory connection information
ldap.host=localhost
ldap.port=389
ldap.authdn=cn=manager,cn=rudder-configuration
ldap.authpw=secret

#inventories information
ldap.inventories.software.basedn=ou=Inventories, cn=rudder-configuration
ldap.inventories.accepted.basedn=ou=Accepted Inventories, ou=Inventories, cn=rudder-configuration
ldap.inventories.pending.basedn=ou=Pending Inventories, ou=Inventories, cn=rudder-configuration
ldap.inventories.removed.basedn=ou=Removed Inventories, ou=Inventories, cn=rudder-configuration

#Base DN for Rudder Data
ldap.rudder.base=ou=Rudder, cn=rudder-configuration

#Base DN (the ou=Node is already given by the DIT)
ldap.node.base=cn=rudder-configuration

#  directory where LDIF trace of LDAP modify request are
#  stored when loglevel is 'trace'
ldif.tracelog.rootdir=/var/rudder/inventories/debug


##
# Other Rudder Configuration properties
## 

#
# directory used as root directory to store LDIF dump
# of historised inventories
history.inventories.rootdir=/var/rudder/inventories/historical


##
#  Upload directory
##
#  directory where new uploaded files are stored
upload.root.directory=/var/rudder/files/

##
#  Emergency stop
##
#  path to the script/binary that allows emergency orchestrator stop
bin.emergency.stop=/opt/rudder/bin/cfe-red-button.sh


##
#  Promise writer directory configuration 
##
rudder.dir.config=/opt/rudder/etc/
#
# The full path to the directory on witch
# git repository (containing share folder, 
# Technique library, etc)
#
rudder.dir.gitRoot=/var/rudder/configuration-repository
#
# The path of the root directory of the Technique library. 
# It MUST be the same directory of ${rudder.dir.gitRoot} 
# or one of its sub-directories
#
rudder.dir.techniques=/var/rudder/configuration-repository/techniques
rudder.dir.licensesFolder=/opt/rudder/etc/licenses
rudder.dir.policies=/var/rudder/
rudder.dir.backup=/var/rudder/backup/
rudder.dir.dependencies=/var/rudder/tools/
rudder.dir.sharing=/var/rudder/files/
rudder.dir.lock=/var/rudder/lock/
rudder.endpoint.cmdb=http://localhost:8080/endpoint/upload/

##
# Shared folder
#
# Directory of the extra files the rudder root server will serve to the managed nodes
# If left empty, no extra files will be served
rudder.dir.shared.files.folder=/var/rudder/configuration-repository/shared-files


# Port used by the community edition
rudder.community.port=5309


rudder.jdbc.driver=org.postgresql.Driver
rudder.jdbc.url=jdbc:postgresql://localhost:5432/rudder
rudder.jdbc.username=rudder
rudder.jdbc.password=Normation


#
# Destination directory for files distributed
# with the copyFile policy
#
policy.copyfile.destination.dir=/some/default/destination/directory/

#
# Command line to check the promises generated
#
rudder.community.checkpromises.command=/var/rudder/cfengine-community/bin/cf-promises
rudder.nova.checkpromises.command=/bin/true


#
# Interval of time between two dynamic group update batch
# Expect an int (amount of minutes)
# If O is given, the dynamic group features will be disabled
#
rudder.batch.dyngroup.updateInterval=5
#
# Interval of time (in seconds) between two checks
# for a Technique library update.
# 300s = 5minutes
# A minimum of 60 seconds is mandatory.
# If O is given, the periodic update of Technique
# library features will be disabled
#
rudder.batch.techniqueLibrary.updateInterval=300


#
# Configure the refs path to use for the git repository for
# the Technique Reference Library. 
# The default is to use "refs/heads/master" (the local master
# branche). 
# You have to use the full ref path. 
rudder.techniqueLibrary.git.refs.path=refs/heads/master

#
# Boolean, defaults to true.
# If true, an archive of Rules, groups, 
# Directives and Active Techniques are recorded
# to the rudder.dir.gitRoot directory specified above
# and a git commit is performed when any of these items is modified.
# 
rudder.autoArchiveItems=true

#
# Boolean, defaults to true.
# If true, when a Directive, Rule,
# group, node ... is modified, promises will be automatically
# regenerated. If false, only a manual request for deployment
# will trigger a deployment.
# 
rudder.autoDeployOnModification=true


#
# Boolean, defaults to true
# If true, REST API urls under /api/... won't require
# to be authenticated to be accessed. 
# The reason to have default=true for that is that the
# authorization/authentication part for the REST API
# will be done by a third party software, like Apache
#
rudder.rest.allowNonAuthenticatedUser=true


#
# If true, in UI Rudder will prompt the user for a reason of the change. 
# The message displayed to the user is based on the variable 
# rudder.ui.changeMessage.explanation
# Based on the value of rudder.ui.changeMessage.mandatory, the user input
# can be mandatory or not
#
rudder.ui.changeMessage.enabled=true

#
# Boolean, defaults false
# If true, the user input will be mandatory (non empty reason message)
#
rudder.ui.changeMessage.mandatory=true

# 
# Text, defaults Please enter a message explaining the reason for this change.
# This variable defines the content of the message prompted to the user
# when he does modifications
# 
rudder.ui.changeMessage.explanation=Please enter a message explaining the reason for this change.
